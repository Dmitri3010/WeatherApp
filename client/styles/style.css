.container {
    display: flex;
    flex-direction: row;
    min-height: 100%;
}
.leftPanel {
    display: flex;
    justify-content: center;
    min-height: 100%;
    flex:1;
}
.mainPanel {
    display: flex;
    flex:3;
    min-height: 100%;
    padding-left: 40px;
    background-color: hsl(260deg 20% 97.06%);
}
.MainPanelContainer {
    display: flex;
    flex-direction: column;
}
.leftPanelContainer {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    row-gap: 60px;
    align-items: center;
}
.citySearchBlock {
    display: flex;
    flex-direction: row;
    padding-top: 15px;
}
.label {
    display: flex;
    font-size: x-large;
}
.TempbigLabel {
    display: flex;
    font-size: 70px;
}
.bigImage {
    display: flex;
    height: 200px;
    width:200px;
}
.searchBoxImage {
    display: flex;
    height:10px;
}
.smallImage {
    display: flex;
}
.searchBoxInput {
    display: flex;
}
.todayInfoContainer {
    display: flex;
    flex-direction: column;
}
.todayInfoContainerRow {
    display: flex;
    flex-direction: row;
}
.weekCarouseleContainer {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: center;
    gap: 20px;
}
.oneDayWeatherBox {
    gap:17px;
    height: 200px;
    width: 150px;
    display: flex;
    flex-direction: column;
    border: 1px white solid;
    background-color: white;
    border-radius: 10px;
    -webkit-box-shadow: -2px -2px 9px -3px rgba(66, 68, 90, 1);
    -moz-box-shadow: -2px -2px 9px -3px rgba(66, 68, 90, 1);
    box-shadow: -2px -2px 9px -3px rgba(66, 68, 90, 1);
    align-items: center;
    justify-content: center;
}
.dayOfWeekLabel {
    display: flex;
    justify-content: center;
}
.dayOfWeekImage {
    display: flex;
    height: 70px;
    width: 70px;
}
.dayOfWeekTempLabel{
    display: flex;
    justify-content: center;
}

.highlitesPanel {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap:40px 50px;
    justify-content: center;
    padding: 10px calc((100% - (255px * 5)) / 2);
}
.highliteBox {
    display: flex;
    flex-direction: column;
    border: 1px white solid;
    align-items: center;
    align-content: center;
    flex: 0 0 30%;
    background-color: white;
    border-radius: 20px;
    -webkit-box-shadow: -2px -2px 9px -3px rgba(66, 68, 90, 1);
    -moz-box-shadow: -2px -2px 9px -3px rgba(66, 68, 90, 1);
    box-shadow: -2px -2px 9px -3px rgba(66, 68, 90, 1);
}
.highliteLabel {
    display: flex;
    justify-content: center;
}
.highliteImg {
    display: flex;
    height: 250px;
}

.titleText {
    display: flex;
    position: relative;
    font-size: 2em;
    letter-spacing:1px;
    font-family: sans-serif;
    display:table;
    margin:10px;
    cursor:pointer;
    transition:.6s;
  }
  .titleText:before,
  .titleText:after {
    content:attr(data-text);
    transition:.6s;
  }
  .titleText:before {
    left: 0;
    top: 0;
    position: absolute;
    z-index:-1;
    text-shadow:
     0px 0px,
     0px 0px,
     0px 0px,
     0px 0px,
     0px 0px,
     0px 0px,
     0px 0px,
     0px 0px,
     0px 0px,
     0px 0px;
    -webkit-mask:repeating-linear-gradient(45deg, transparent 0 3px, rgba(0,0,0,0.5) 0 6px);
            mask:repeating-linear-gradient(45deg, transparent 0 3px, rgba(0,0,0,0.5) 0 6px);
  }
  .titleText:hover {
    transform:translate(-10px,-10px);
  }  
  .titleText:hover:before {
    text-shadow:
     1px 1px,
     2px 2px,
     3px 3px,
     4px 4px,
     5px 5px,
     6px 6px,
     7px 7px,
     8px 8px,
     9px 9px,
     10px 10px;
  }

  .citySmallImage {
    height: 150px;
    border-radius: 15px;
  }

  * {
	border: 0;
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}
:root {
	--bg: #e3e4e8;
	--fg: #17181c;
	--input: #ffffff;
	--primary: #255ff4;
	--dur: 1s;
}
input {
	color: var(--fg);
	font: 1em/1.5 Hind, sans-serif;
}
form, input, .caret {
	margin: auto;
}
form {
	position: relative;
	width: 100%;
	max-width: 17em;
}
input, .caret {
	display: block;
	transition: all calc(var(--dur) * 0.5) linear;
}
input {
	background: transparent;
	border-radius: 50%;
	box-shadow: 0 0 0 0.25em inset;
	caret-color: var(--primary);
	width: 2em;
	height: 2em;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}
input:focus, input:valid {
	background: var(--input);
	border-radius: 0.25em;
	box-shadow: none;
	padding: 0.75em 1em;
	transition-duration: calc(var(--dur) * 0.25);
	transition-delay: calc(var(--dur) * 0.25);
	width: 100%;
	height: 3em;
}
input:focus {
	animation: showCaret var(--dur) steps(1);
	outline: transparent;
}
input:focus + .caret, input:valid + .caret {
	animation: handleToCaret var(--dur) linear;
	background: transparent;
	width: 1px;
	height: 1.5em;
	transform: translate(0,-1em) rotate(-180deg) translate(7.5em,-0.25em);
}
input::-webkit-search-decoration {
	-webkit-appearance: none;
}
label {
	color: #e3e4e8;
	overflow: hidden;
	position: absolute;
	width: 0;
	height: 0;
}
.caret {
	background: currentColor;
	border-radius: 0 0 0.125em 0.125em;
	margin-bottom: -0.6em;
	width: 0.25em;
	height: 1em;
	transform: translate(0,-1em) rotate(-45deg) translate(0,0.875em);
	transform-origin: 50% 0;
}

/* Dark mode */
@media (prefers-color-scheme: dark) {	
	:root {
		--bg: #17181c;
		--fg: #e3e4e8;
		--input: #2e3138;
		--primary: #5583f6;
	}
}

/* Animations */
@keyframes showCaret {
	from {
		caret-color: transparent;
	}
	to {
		caret-color: var(--primary);
	}
}
@keyframes handleToCaret {
	from {
		background: currentColor;
		width: 0.25em;
		height: 1em;
		transform: translate(0,-1em) rotate(-45deg) translate(0,0.875em);
	}
	25% {
		background: currentColor;
		width: 0.25em;
		height: 1em;
		transform: translate(0,-1em) rotate(-180deg) translate(0,0.875em);
	}
	50%, 62.5% {
		background: var(--primary);
		width: 1px;
		height: 1.5em;
		transform: translate(0,-1em) rotate(-180deg) translate(7.5em,2.5em);
	}
	75%, 99% {
		background: var(--primary);
		width: 1px;
		height: 1.5em;
		transform: translate(0,-1em) rotate(-180deg) translate(7.5em,-0.25em);
	}
	87.5% {
		background: var(--primary);
		width: 1px;
		height: 1.5em;
		transform: translate(0,-1em) rotate(-180deg) translate(7.5em,0.125em);
	}
	to {
		background: transparent;
		width: 1px;
		height: 1.5em;
		transform: translate(0,-1em) rotate(-180deg) translate(7.5em,-0.25em);
	}
}
  
